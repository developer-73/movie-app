{"version":3,"sources":["img/loader.gif","img/logo2.jpg","actions/characterAction.js","constants/index.js","components/CharacterPicker.jsx","components/MovieCard.jsx","App.js","reducers/rootReducer.js","reducers/characterReducer.js","sagas/characterSaga.js","index.js"],"names":["module","exports","getPerson","data","type","getPersonSuccess","payload","films","CharacterPicker","state","characters","selectedCharacter","dropdownOpen","toggle","setState","prevState","renderDropdownItems","map","ch","key","url","value","name","handleChange","e","find","target","props","this","fetchAllCharacters","finalCharacterArray","charac","replace","characterResponseArray","page","push","fetch","iterator","length","response","json","results","transformHttpToHttps","onChange","defaultValue","disabled","React","Component","MovieCard","getYear","date","split","shift","getDayOfWeek","dayOfWeek","Date","getDay","isNaN","numeral","film","episode_id","title","className","last","md","release_date","App","person","currentFilm","loading","row","showLoader","sortFilms","sort","a","b","renderFilms","f","style","setTimeout","src","logo2","alt","width","loader","connect","characterReducer","dispatch","bindActionCreators","combineReducers","action","getFilms","getPersonSaga","then","res","put","newFilms","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36a057ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.26ef8bb4.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo2.e58a3e3d.jpg\";","import {\n  GET_PERSON_START,\n  GET_PERSON_SUCCESS,\n  GET_PERSON_FAILURE,\n  GET_FILMS_START,\n  GET_FILMS_SUCCESS,\n  GET_FILMS_FAILURE\n} from \"../constants\";\n\nexport function getPerson(data) {\n  return {\n    type: GET_PERSON_START,\n    data\n  };\n}\n\nexport function getPersonSuccess(payload) {\n  getFilms(payload);\n  return {\n    type: GET_PERSON_SUCCESS,\n    payload\n  };\n}\n\nexport function getPersonFailure(errors) {\n  return {\n    type: GET_PERSON_FAILURE,\n    payload: errors\n  };\n}\n\nexport function getFilms(data) {\n  return {\n    type: GET_FILMS_START,\n    data: data.films\n  };\n}\n\nexport function getFilmsSuccess(payload) {\n  return {\n    type: GET_FILMS_SUCCESS,\n    payload\n  };\n}\n\nexport function getFilmsFailure(errors) {\n  return {\n    type: GET_FILMS_FAILURE,\n    payload: errors\n  };\n}\n","export const GET_PERSON_START = \"GET_PERSON_START\"\nexport const GET_PERSON_SUCCESS = \"GET_PERSON_SUCCESS\"\nexport const GET_PERSON_FAILURE = \"GET_PERSON_FAILURE\"\n\nexport const GET_FILMS_START = \"GET_FILMS_START\"\nexport const GET_FILMS_SUCCESS = \"GET_FILMS_SUCCESS\"\nexport const GET_FILMS_FAILURE = \"GET_FILMS_FAILURE\"\n\nexport const GET_ALL_CHARACTERS_START = \"GET_ALL_CHARACTERS_START\"\nexport const GET_ALL_CHARACTERS_SUCCESS = \"GET_ALL_CHARACTERS_SUCCESS\"\nexport const GET_ALL_CHARACTERS_FAILURE = \"GET_ALL_CHARACTERS_FAILURE\"\n","import React from 'react'\nimport { Input, FormGroup } from 'reactstrap'\n\nclass CharacterPicker extends React.Component {\n  state = {\n    characters: [],\n    selectedCharacter: '',\n    dropdownOpen: false\n  }\n\n  componentDidMount() {\n    this.fetchAllCharacters();\n  }\n\n  transformHttpToHttps(finalCharacterArray){\n    return finalCharacterArray.map((charac)=>{\n      return {...charac,url:charac.url.replace('http','https')};\n    });\n  }\n\n  async fetchAllCharacters(){\n    let characterResponseArray = [];\n    let finalCharacterArray = [];\n\n    for(let page=1;page<=9;page++){\n      characterResponseArray.push(fetch(`https://swapi.dev/api/people/?page=${page}`));\n    }\n    \n    for(let iterator=0;iterator<characterResponseArray.length;iterator++){\n      const response = await characterResponseArray[iterator];\n      const data = await response.json();\n      finalCharacterArray.push(...data.results);\n    }\n    finalCharacterArray = this.transformHttpToHttps(finalCharacterArray);\n    this.setState({ characters:finalCharacterArray });\n    return finalCharacterArray;\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  renderDropdownItems = () => {\n    let newChar = this.state.characters.map(ch => {\n      return <option key={ch.url} value={ch.name}>{ch.name}</option>\n    })\n    return newChar;\n  }\n\n  handleChange = e => {\n    let selectedCharacter = this.state.characters.find(ch => ch.name === e.target.value)\n    this.setState({ selectedCharacter })\n    this.props.handleChange(selectedCharacter)\n  }\n\n  render() {\n    return (\n      <FormGroup>\n        <Input \n          type=\"select\"\n          name=\"select\"\n          onChange={this.handleChange}\n          defaultValue=\"Choose a character\"\n        >\n        <option value=\"Choose a character\" disabled>Choose a Character...</option>\n        {this.renderDropdownItems()}\n        </Input>\n      </FormGroup>\n    )\n  }\n}\n\nexport default CharacterPicker;\n","import React from 'react'\nimport { Col, Row } from 'reactstrap'\n\nclass MovieCard extends React.Component {\n  getYear = (date) => {\n    date = date.split('-')\n    let year = date.shift()\n    return year;\n  }\n\n  getDayOfWeek = (date) => {\n    let dayOfWeek = new Date(date).getDay();\n    return isNaN(dayOfWeek) ? null : ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][dayOfWeek];\n  }\n\n  render() {\n    let roman = [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\"]\n    let numeral = roman[this.props.film.episode_id - 1]\n    return (\n      <div key={this.props.film.title} className='movie-row'>\n        { this.props.last===true?\n          <Row className=\"movie-row-content\">\n            <Col md={6}>\n              <h3>Episode {numeral}: {this.props.film.title}</h3>\n            </Col>\n            <Col md={6}>\n              <h3>Year: {this.getYear(this.props.film.release_date)}</h3>\n            </Col>\n          </Row>:\n          <Row className=\"movie-row-content\">\n            <Col md={12}>\n              <h3>Episode {numeral}: {this.props.film.title}</h3>\n            </Col>\n          </Row>\n        }\n      </div>\n    )\n  }\n}\n\nexport default MovieCard;\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { getPerson } from './actions/characterAction'\n\nimport './css/App.css';\nimport CharacterPicker from './components/CharacterPicker'\nimport MovieCard from './components/MovieCard'\nimport loader from './img/loader.gif'\nimport logo2 from './img/logo2.jpg'\n\n\nclass App extends React.Component {\n  state = {\n    person: '',\n    currentFilm: {},\n    loading: false,\n    row: true,\n  }\n\n  handleChange = person => {\n    this.setState({ person: person.name })\n    this.props.getPerson(person)\n    this.showLoader()\n  }\n\n  sortFilms = films => {\n    films = films.sort((a, b) => {\n      if (a.release_date < b.release_date) return -1;\n      if (a.release_date > b.release_date) return 1;\n      return 0;\n    })\n    return films\n  }\n\n  renderFilms = (films) => {\n    let newFilms =\n      films.length ?\n        this.sortFilms(films).map(f => {\n          return <MovieCard\n            film={f}\n            row={this.state.row}\n            key={f.episode_id} />\n        })\n        : <span style={{ \"margin\": \"20px auto\" }}>\n            No films listed\n          </span>\n    return newFilms\n  }\n\n  showLoader = () => {\n    this.setState({ loading: true })\n    setTimeout(() => this.setState({ loading: false }), 1000)\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo2} alt=\"Movie Poster\" width=\"150px\" />\n          <div className=\"App-header-center\">\n            <CharacterPicker handleChange={this.handleChange} />\n          </div>\n        </header>\n\n        {this.props.loading || this.state.loading ?\n          <div className=\"movies\">\n            <img src={loader} width=\"300px\" alt=\"loading\" className=\"loader\" />\n          </div> : null\n        }\n\n        {this.state.person && !this.state.loading &&\n          <h3 className=\"subheader-caption\">Films that {this.state.person} appears in:</h3>\n        }\n\n        {this.props.loading === false &&\n        this.props.films &&\n        !!this.props.films.length &&\n          <div className=\"movies\">\n            {this.renderFilms(this.props.films)}\n          </div>\n        }\n    \n\n        {this.state.person && !this.state.loading &&\n          <h3 className=\"subheader-caption\"> Last appearence of {this.state.person} :</h3>\n        }\n\n        {this.props.loading === false &&\n          this.props.films &&\n          !!this.props.films.length &&\n            <div className=\"movies\">\n              <MovieCard\n                film={this.props.films[this.props.films.length-1]}\n                row={this.state.row}\n                last={true}\n              />\n            </div>\n          }\n\n        {this.props.loading === false &&\n        this.state.loading === false &&\n        this.props.films &&\n        this.props.films.length === 0 &&\n          'No films available'}\n\n        {!this.props.person && !this.props.loading &&\n          <div className=\"welcome\">\n            <div className=\"welcome-inner\">\n              <h1>Welcome!</h1>\n              <h2>Choose a Character</h2>\n              <h2>Using the Menu Above</h2>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.characterReducer.loading,\n    person: state.characterReducer.person,\n    films: state.characterReducer.films\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators( { getPerson }, dispatch )\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport characterReducer from './characterReducer';\nexport default combineReducers({\n  characterReducer\n});","import {\n  GET_PERSON_START,\n  GET_PERSON_SUCCESS,\n  GET_FILMS_SUCCESS,\n} from \"../constants\";\n\nexport default (state = { loading: false, person: false }, action) => {\n  switch (action.type) {\n    case GET_PERSON_START:\n      return {\n        ...state,\n        loading: true\n      };\n    case GET_PERSON_SUCCESS:\n      return {\n        ...state,\n        person: action.payload\n      };\n    case GET_FILMS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        films: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport {\n  getPersonSuccess,\n  getPersonFailure,\n  getFilmsSuccess,\n  getFilmsFailure\n} from \"../actions/characterAction\";\n\nimport { GET_PERSON_START, GET_FILMS_START } from \"../constants\";\n\nfunction* getPerson(action) {\n  try {\n    const payload = yield fetch(action.data.url).then(res => res.json());\n    yield getFilms({ type: GET_FILMS_START, payload });\n    yield put(getPersonSuccess(payload));\n  } catch (error) {\n    yield put(getPersonFailure(error));\n  }\n}\n\nfunction* getFilms(action) {\n  try {\n    let newFilms = [];\n    if (action.payload.films) {\n      action.payload.films.map(f => {\n        f = f.replace(\"http\", \"https\")\n        return fetch(f).then(res =>\n          res.json().then(data => newFilms.push(data))\n        );\n      });\n    }\n    yield put(getFilmsSuccess(newFilms));\n  } catch (error) {\n    yield put(getFilmsFailure(error));\n  }\n}\n\nexport default function* getPersonSaga() {\n  yield takeLatest(GET_PERSON_START, getPerson);\n  yield takeLatest(GET_FILMS_START, getFilms);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux';\n// import configureStore from './store';\nimport rootReducer from './reducers/rootReducer';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport getPersonSaga from './sagas/characterSaga';\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(sagaMiddleware)\n)\n\nsagaMiddleware.run(getPersonSaga)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}